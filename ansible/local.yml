---

- hosts: localhost
  connection: local
  gather_facts: no
  environment:
    PYTHONPATH: /Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/:$PYTHONPATH
    TMPDIR: /tmp
  tasks:
    - name: create docker network
      docker_network:
        name: reflink_network
        ipam_options:
          subnet: 192.168.0.0/24
          gateway: 192.168.0.1
    - name: get the latest version of localstack
      git:
        repo: http://github.com/atlassian/localstack.git
        dest: /tmp/localstack
        depth: 1
        force: yes
    - name: launch localstack with docker-compose
      environment:
        TMPDIR: /tmp
      docker_service:
        project_src: /tmp/localstack
        debug: yes
        timeout: 30
    - name: create kinsesis stream
      command: /Library/Frameworks/Python.framework/Versions/2.7/bin/aws --no-verify-ssl --endpoint-url=http://localhost:4568 kinesis create-stream --stream-name PDFIsAvailable --shard-count 1
      ignore_errors: yes

- name: Bring up redis container.
  hosts: localhost
  connection: local
  tasks:
    - name: create container
      docker_container:
        name: redis_container
        image: "redis"
        state: started
        expose: 6379
        tls: true
        tty: true
        networks:
          - name: reflink_network
            ipv4_address: "192.168.0.104"
            aliases:
              - "redis_container"
            purge_networks: yes
        volumes:
          - /tmp/containers:/tmp/host:rw
    - name: Define host group
      add_host:
        name: redis_container
        ansible_connection: docker
        groups: redis


- name: Bring up reflink docker containers.
  hosts: localhost
  connection: local
  tasks:
    - name: create containers
      docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        state: started
        expose: 22
        privileged: true
        published_ports: "{{ item.ssh_port }}:22"
        tls: true
        tty: true
        networks:
          - name: reflink_network
            ipv4_address: "{{ item.ip }}"
            aliases:
              - "{{ item.name }}"
            purge_networks: yes
        volumes:
          - /tmp/containers:/tmp/host:rw
      with_items:
        - name: consumer__container
          image: "amazonlinux"
          ssh_port: 2222
          ip: "192.168.0.101"
        - name: worker__container
          image: "amazonlinux"
          ssh_port: 2223
          ip: "192.168.0.102"
        - name: web__container
          image: "amazonlinux"
          ssh_port: 2224
          ip: "192.168.0.103"

    - name: Define host groups
      add_host:
        name: "{{ item.name }}"
        ansible_connection: docker
        groups: "{{ item.group }}"
      with_items:
        - name: consumer__container
          group: consumer
        - name: worker__container
          group: worker
        - name: web__container
          group: web

- name: Install base configuration on reflink hosts.
  hosts: consumer:worker:web
  vars:
    - reflink_user: bob
    - aws_region: us-east-1
    - dynamodb_endpoint: "http://192.168.0.1:4569"
    - s3_endpoint: "http://192.168.0.1:4572"
    - s3_bucket: "reflink"
    # - sqs_endpoint: "sqs://{{ aws_access_key }}:{{ aws_secret_key }}@192.168.0.1:4576"
    - sqs_endpoint: "redis://192.168.0.104/0"
    - kinesis_endpoint: "http://192.168.0.1:4568"
    - cloudwatch_endpoint: "http://192.168.0.1:4582"
  roles:
    - reflink

- name: Install consumer role
  hosts: consumer
  vars:
    - reflink_user: bob
    - aws_region: us-east-1
    - dynamodb_endpoint: "http://192.168.0.1:4569"
    - s3_endpoint: "http://192.168.0.1:4572"
    - s3_bucket: "reflink"
    # - sqs_endpoint: "sqs://{{ aws_access_key }}:{{ aws_secret_key }}@192.168.0.1:4576"
    - sqs_endpoint: "redis://192.168.0.104:6379/0"
    - kinesis_endpoint: "http://192.168.0.1:4568"
    - cloudwatch_endpoint: "http://192.168.0.1:4582"
  roles:
    - consumer

- name: Install worker role
  hosts: worker
  vars:
    - reflink_user: bob
    - aws_region: us-east-1
    - dynamodb_endpoint: "http://192.168.0.1:4569"
    - s3_endpoint: "http://192.168.0.1:4572"
    - s3_bucket: "reflink"
    # - sqs_endpoint: "sqs://{{ aws_access_key }}:{{ aws_secret_key }}@192.168.0.1:4576"
    - sqs_endpoint: "redis://192.168.0.104/0"
    - kinesis_endpoint: "http://192.168.0.1:4568"
    - cloudwatch_endpoint: "http://192.168.0.1:4582"
  roles:
    - worker
#
# - name: Install web role
#   hosts: web
#   roles:
#     - web
